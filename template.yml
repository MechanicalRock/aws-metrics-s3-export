AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Creating a lambda to export a whitelist of cloudwatch metrics periodically and push them into s3.'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: mechanicalrock-aws-metrics-s3-export
    Description: Creating a lambda to export a whitelist of cloudwatch metrics periodically and push them into s3.
    Author: Mechanical Rock
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['metrics', 's3', 'export', 'mechanicalrock']
    HomePageUrl: https://github.com/MechanicalRock/aws-metrics-s3-export
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/MechanicalRock/aws-metrics-s3-export

Parameters:
  PermissionsBoundary:
    Description: "An optional permissions boundary to apply to all roles"
    Type: String
    ConstraintDescription: Must match a valid ARN of an IAM policy for the permission boundary
    AllowedPattern: "^$|arn:aws:iam::\\d{12}:policy/[a-zA-Z\\-]+$"
    Default: ""
  SanitisePattern:
    Description: 'comma delimited list of patterns to use to sanitise pipeline names.  Strips the pipeline name to characters before the matching patter.  Example pipeline with name "foo-pipeline123" and sanitise pattern "-pipeline" will be reported as "foo"'
    Type: CommaDelimitedList
    Default: "-pipeline"
    AllowedPattern: [a-zA-Z_\\-]+(,[a-zA-Z_\\-]+)*

Conditions:
  HasPermissionBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]

Resources:
  DescribeAlarmPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudwatch:DescribeAlarmHistory
            Resource: '*'

  MTTREventHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Export cloudwatch metrics and push them into s3
      Handler: s3Export.handler
      Runtime: nodejs12.x
      CodeUri: .build/src
      Environment:
        Variables:
          ALARM_NAME_BLACKLIST_PATTERN: !Ref AlarmNameBlackListPattern
      Timeout: 60
      Events:
        DashboardEventRule:
          Type: Schedule
          Properties:
            Schedule: 'cron(*/5 * * * ? *)'
      Policies:
        - CloudWatchPutMetricPolicy: {}
        - !Ref DescribeAlarmPolicy
      PermissionsBoundary:
        !If [HasPermissionBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
