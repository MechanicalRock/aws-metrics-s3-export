AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Creating a lambda to export a whitelist of cloudwatch metrics periodically and push them into s3.'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: mechanicalrock-aws-metrics-s3-export
    Description: Creating a lambda to export a whitelist of cloudwatch metrics periodically and push them into s3.
    Author: Mechanical Rock
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['metrics', 's3', 'export', 'mechanicalrock']
    HomePageUrl: https://github.com/MechanicalRock/aws-metrics-s3-export
    SemanticVersion: 1.0.1
    SourceCodeUrl: https://github.com/MechanicalRock/aws-metrics-s3-export

Parameters:
  PermissionsBoundary:
    Description: 'An optional permissions boundary to apply to all roles'
    Type: String
    ConstraintDescription: Must match a valid ARN of an IAM policy for the permission boundary
    AllowedPattern: "^$|arn:aws:iam::\\d{12}:policy/[a-zA-Z\\-]+$"
    Default: ''
  MetricFilter:
    Description: 'An array of metrics names and namespaces that needs to be exported to s3'
    Type: String
    ConstraintDescription: 'The array should look like [{ "metricName" : "ConcurrentExecutions", "nameSpace" : "Lambda"}, { "metricName" : "IncomingBytes", "nameSpace" : "Logs"}]'
  ExportBucketName:
    Description: 'BucketName where the metrics result will be exported to'
    Type: String
  MetricsExportPriod:
    Description: 'Metrics export priod, WEEKLY, FORTNIGHTLY, MOTHLY'
    Type: String
    AllowedValues:
      - WEEKLY
      - FORTNIGHTLY
      - MOTHLY

Conditions:
  HasPermissionBoundary: !Not [!Equals [!Ref PermissionsBoundary, '']]

Resources:
  GetMetricsStatisticsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudwatch:GetMetricStatistics
            Resource: '*'

  S3ReadWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${ExportBucketName}
              - !Sub arn:aws:s3:::${ExportBucketName}/*

    SsmAccessPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:PutParameters
              Resource:
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/metrics/*'

  S3ExportHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Export cloudwatch metrics and push them into s3
      Handler: s3Export.handler
      Runtime: nodejs12.x
      CodeUri: .build/src
      Environment:
        Variables:
          METRICSFILTER: !Ref MetricFilter
          EXPORTBUCKETNAME: !Ref ExportBucketName
          SSMPARAMETERNAME: !Ref PreviousMetricsExportEndDate
          METRICSEXPORTPRIOD: !Ref MetricsExportPriod
      Timeout: 60
      Events:
        DashboardEventRule:
          Type: Schedule
          Properties:
            Schedule: 'cron(*/5 * * * ? *)'
      Policies:
        - !Ref GetMetricsStatisticsPolicy
        - !Ref S3ReadWritePolicy
        - !Ref SsmAccessPolicy
      PermissionsBoundary: !If [HasPermissionBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]

  PreviousMetricsExportEndDate:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Value: 'Undefined'
      Description: A parameter to store previous metrics exported end date
      Name: /metrics/previous-export-end-date
